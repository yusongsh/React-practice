{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createElement = _interopRequireDefault(require(\"./create-element\"));\n\nvar _checkForListedLanguage = _interopRequireDefault(require(\"./checkForListedLanguage\"));\n\nvar _excluded = [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"showInlineLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"wrapLongLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getAllLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction AllLineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    \"float\": 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getAllLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction getEmWidthOfNumber(num) {\n  return \"\".concat(num.toString().length, \".25em\");\n}\n\nfunction getInlineLineNumber(lineNumber, inlineLineNumberStyle) {\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      key: \"line-number--\".concat(lineNumber),\n      className: ['comment', 'linenumber', 'react-syntax-highlighter-line-number'],\n      style: inlineLineNumberStyle\n    },\n    children: [{\n      type: 'text',\n      value: lineNumber\n    }]\n  };\n}\n\nfunction assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {\n  // minimally necessary styling for line numbers\n  var defaultLineNumberStyle = {\n    display: 'inline-block',\n    minWidth: getEmWidthOfNumber(largestLineNumber),\n    paddingRight: '1em',\n    textAlign: 'right',\n    userSelect: 'none'\n  }; // prep custom styling\n\n  var customLineNumberStyle = typeof lineNumberStyle === 'function' ? lineNumberStyle(lineNumber) : lineNumberStyle; // combine\n\n  var assembledStyle = _objectSpread(_objectSpread({}, defaultLineNumberStyle), customLineNumberStyle);\n\n  return assembledStyle;\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineNumberStyle = _ref3.lineNumberStyle,\n      largestLineNumber = _ref3.largestLineNumber,\n      showInlineLineNumbers = _ref3.showInlineLineNumbers,\n      _ref3$lineProps = _ref3.lineProps,\n      lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className,\n      showLineNumbers = _ref3.showLineNumbers,\n      wrapLongLines = _ref3.wrapLongLines;\n  var properties = typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps;\n  properties['className'] = className;\n\n  if (lineNumber && showInlineLineNumbers) {\n    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n  }\n\n  if (wrapLongLines & showLineNumbers) {\n    properties.style = _objectSpread(_objectSpread({}, properties.style), {}, {\n      display: 'flex'\n    });\n  }\n\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: (0, _toConsumableArray2[\"default\"])(new Set(className))\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      flattenCodeTree(node.children, classNames).forEach(function (i) {\n        return newTree.push(i);\n      });\n    }\n  }\n\n  return newTree;\n}\n\nfunction processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {\n  var _ref4;\n\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  function createWrappedLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createLineElement({\n      children: children,\n      lineNumber: lineNumber,\n      lineNumberStyle: lineNumberStyle,\n      largestLineNumber: largestLineNumber,\n      showInlineLineNumbers: showInlineLineNumbers,\n      lineProps: lineProps,\n      className: className,\n      showLineNumbers: showLineNumbers,\n      wrapLongLines: wrapLongLines\n    });\n  }\n\n  function createUnwrappedLine(children, lineNumber) {\n    if (showLineNumbers && lineNumber && showInlineLineNumbers) {\n      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n      children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n    }\n\n    return children;\n  }\n\n  function createLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return wrapLines || className.length > 0 ? createWrappedLine(children, lineNumber, className) : createUnwrappedLine(children, lineNumber);\n  }\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        }; // if it's the first line\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          var _line = createLine(_children, lineNumber);\n\n          newTree.push(_line); // if it's the last line\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n          var lastLineInPreviousSpan = {\n            type: 'text',\n            value: \"\".concat(text)\n          };\n\n          if (stringChild) {\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            var _children2 = [lastLineInPreviousSpan];\n\n            var _line2 = createLine(_children2, lineNumber, node.properties.className);\n\n            newTree.push(_line2);\n          } // if it's neither the first nor the last line\n\n        } else {\n          var _children3 = [newChild];\n\n          var _line3 = createLine(_children3, lineNumber, node.properties.className);\n\n          newTree.push(_line3);\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n      var line = createLine(children, lineNumber);\n      newTree.push(line);\n    }\n  }\n\n  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);\n}\n\nfunction defaultRenderer(_ref5) {\n  var rows = _ref5.rows,\n      stylesheet = _ref5.stylesheet,\n      useInlineStyles = _ref5.useInlineStyles;\n  return rows.map(function (node, i) {\n    return (0, _createElement[\"default\"])({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n} // only highlight.js has the highlightAuto method\n\n\nfunction isHighlightJs(astGenerator) {\n  return astGenerator && typeof astGenerator.highlightAuto !== 'undefined';\n}\n\nfunction getCodeTree(_ref6) {\n  var astGenerator = _ref6.astGenerator,\n      language = _ref6.language,\n      code = _ref6.code,\n      defaultCodeValue = _ref6.defaultCodeValue; // figure out whether we're using lowlight/highlight or refractor/prism\n  // then attempt highlighting accordingly\n  // lowlight/highlight?\n\n  if (isHighlightJs(astGenerator)) {\n    var hasLanguage = (0, _checkForListedLanguage[\"default\"])(astGenerator, language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  } // must be refractor/prism, then\n\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nfunction _default(defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref7) {\n    var language = _ref7.language,\n        children = _ref7.children,\n        _ref7$style = _ref7.style,\n        style = _ref7$style === void 0 ? defaultStyle : _ref7$style,\n        _ref7$customStyle = _ref7.customStyle,\n        customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle,\n        _ref7$codeTagProps = _ref7.codeTagProps,\n        codeTagProps = _ref7$codeTagProps === void 0 ? {\n      className: language ? \"language-\".concat(language) : undefined,\n      style: _objectSpread(_objectSpread({}, style['code[class*=\"language-\"]']), style[\"code[class*=\\\"language-\".concat(language, \"\\\"]\")])\n    } : _ref7$codeTagProps,\n        _ref7$useInlineStyles = _ref7.useInlineStyles,\n        useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles,\n        _ref7$showLineNumbers = _ref7.showLineNumbers,\n        showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers,\n        _ref7$showInlineLineN = _ref7.showInlineLineNumbers,\n        showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN,\n        _ref7$startingLineNum = _ref7.startingLineNumber,\n        startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum,\n        lineNumberContainerStyle = _ref7.lineNumberContainerStyle,\n        _ref7$lineNumberStyle = _ref7.lineNumberStyle,\n        lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle,\n        wrapLines = _ref7.wrapLines,\n        _ref7$wrapLongLines = _ref7.wrapLongLines,\n        wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines,\n        _ref7$lineProps = _ref7.lineProps,\n        lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps,\n        renderer = _ref7.renderer,\n        _ref7$PreTag = _ref7.PreTag,\n        PreTag = _ref7$PreTag === void 0 ? 'pre' : _ref7$PreTag,\n        _ref7$CodeTag = _ref7.CodeTag,\n        CodeTag = _ref7$CodeTag === void 0 ? 'code' : _ref7$CodeTag,\n        _ref7$code = _ref7.code,\n        code = _ref7$code === void 0 ? (Array.isArray(children) ? children[0] : children) || '' : _ref7$code,\n        astGenerator = _ref7.astGenerator,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_ref7, _excluded);\n    astGenerator = astGenerator || defaultAstGenerator;\n    var allLineNumbers = showLineNumbers ? /*#__PURE__*/_react[\"default\"].createElement(AllLineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var generatorClassName = isHighlightJs(astGenerator) ? 'hljs' : 'prismjs';\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: rest.className ? \"\".concat(generatorClassName, \" \").concat(rest.className) : generatorClassName,\n      style: Object.assign({}, customStyle)\n    });\n\n    if (wrapLongLines) {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre-wrap'\n      });\n    } else {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre'\n      });\n    }\n\n    if (!astGenerator) {\n      return /*#__PURE__*/_react[\"default\"].createElement(PreTag, preProps, allLineNumbers, /*#__PURE__*/_react[\"default\"].createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * Some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined.\n     */\n\n\n    if (wrapLines === undefined && renderer || wrapLongLines) wrapLines = true;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    } // determine largest line number so that we can force minWidth on all linenumber elements\n\n\n    var largestLineNumber = codeTree.value.length + startingLineNumber;\n    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);\n    return /*#__PURE__*/_react[\"default\"].createElement(PreTag, preProps, /*#__PURE__*/_react[\"default\"].createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({\n      rows: rows,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_default","_objectWithoutProperties2","_toConsumableArray2","_defineProperty2","_react","_createElement","_checkForListedLanguage","_excluded","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","newLineRegex","getNewLines","str","match","getAllLineNumbers","_ref","lines","startingLineNumber","style","map","_","number","createElement","concat","className","AllLineNumbers","_ref2","codeString","codeStyle","_ref2$containerStyle","containerStyle","paddingRight","_ref2$numberStyle","numberStyle","assign","replace","split","getEmWidthOfNumber","num","toString","getInlineLineNumber","lineNumber","inlineLineNumberStyle","type","tagName","properties","children","assembleLineNumberStyles","lineNumberStyle","largestLineNumber","defaultLineNumberStyle","display","minWidth","textAlign","userSelect","customLineNumberStyle","assembledStyle","createLineElement","_ref3","showInlineLineNumbers","_ref3$lineProps","lineProps","_ref3$className","showLineNumbers","wrapLongLines","unshift","flattenCodeTree","tree","undefined","newTree","node","Set","classNames","processLines","codeTree","wrapLines","_ref4","lastLineBreakIndex","index","createWrappedLine","createUnwrappedLine","createLine","_loop","newLines","splitValue","text","newChild","_children","slice","_line","stringChild","lastLineInPreviousSpan","newElem","splice","_children2","_line2","_children3","_line3","line","defaultRenderer","_ref5","rows","stylesheet","useInlineStyles","isHighlightJs","astGenerator","highlightAuto","getCodeTree","_ref6","language","code","defaultCodeValue","hasLanguage","highlight","e","defaultAstGenerator","defaultStyle","SyntaxHighlighter","_ref7","_ref7$style","_ref7$customStyle","customStyle","_ref7$codeTagProps","codeTagProps","_ref7$useInlineStyles","_ref7$showLineNumbers","_ref7$showInlineLineN","_ref7$startingLineNum","lineNumberContainerStyle","_ref7$lineNumberStyle","_ref7$wrapLongLines","_ref7$lineProps","renderer","_ref7$PreTag","PreTag","_ref7$CodeTag","CodeTag","_ref7$code","Array","isArray","rest","allLineNumbers","defaultPreStyle","hljs","backgroundColor","generatorClassName","preProps","whiteSpace"],"sources":["/Users/yusongshi/Desktop/coding_challenge/Day_1/my-app/node_modules/react-syntax-highlighter/dist/cjs/highlight.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createElement = _interopRequireDefault(require(\"./create-element\"));\n\nvar _checkForListedLanguage = _interopRequireDefault(require(\"./checkForListedLanguage\"));\n\nvar _excluded = [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"showInlineLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"wrapLongLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getAllLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction AllLineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    \"float\": 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getAllLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction getEmWidthOfNumber(num) {\n  return \"\".concat(num.toString().length, \".25em\");\n}\n\nfunction getInlineLineNumber(lineNumber, inlineLineNumberStyle) {\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      key: \"line-number--\".concat(lineNumber),\n      className: ['comment', 'linenumber', 'react-syntax-highlighter-line-number'],\n      style: inlineLineNumberStyle\n    },\n    children: [{\n      type: 'text',\n      value: lineNumber\n    }]\n  };\n}\n\nfunction assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {\n  // minimally necessary styling for line numbers\n  var defaultLineNumberStyle = {\n    display: 'inline-block',\n    minWidth: getEmWidthOfNumber(largestLineNumber),\n    paddingRight: '1em',\n    textAlign: 'right',\n    userSelect: 'none'\n  }; // prep custom styling\n\n  var customLineNumberStyle = typeof lineNumberStyle === 'function' ? lineNumberStyle(lineNumber) : lineNumberStyle; // combine\n\n  var assembledStyle = _objectSpread(_objectSpread({}, defaultLineNumberStyle), customLineNumberStyle);\n\n  return assembledStyle;\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineNumberStyle = _ref3.lineNumberStyle,\n      largestLineNumber = _ref3.largestLineNumber,\n      showInlineLineNumbers = _ref3.showInlineLineNumbers,\n      _ref3$lineProps = _ref3.lineProps,\n      lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className,\n      showLineNumbers = _ref3.showLineNumbers,\n      wrapLongLines = _ref3.wrapLongLines;\n  var properties = typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps;\n  properties['className'] = className;\n\n  if (lineNumber && showInlineLineNumbers) {\n    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n  }\n\n  if (wrapLongLines & showLineNumbers) {\n    properties.style = _objectSpread(_objectSpread({}, properties.style), {}, {\n      display: 'flex'\n    });\n  }\n\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: (0, _toConsumableArray2[\"default\"])(new Set(className))\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      flattenCodeTree(node.children, classNames).forEach(function (i) {\n        return newTree.push(i);\n      });\n    }\n  }\n\n  return newTree;\n}\n\nfunction processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {\n  var _ref4;\n\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  function createWrappedLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createLineElement({\n      children: children,\n      lineNumber: lineNumber,\n      lineNumberStyle: lineNumberStyle,\n      largestLineNumber: largestLineNumber,\n      showInlineLineNumbers: showInlineLineNumbers,\n      lineProps: lineProps,\n      className: className,\n      showLineNumbers: showLineNumbers,\n      wrapLongLines: wrapLongLines\n    });\n  }\n\n  function createUnwrappedLine(children, lineNumber) {\n    if (showLineNumbers && lineNumber && showInlineLineNumbers) {\n      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n      children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n    }\n\n    return children;\n  }\n\n  function createLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return wrapLines || className.length > 0 ? createWrappedLine(children, lineNumber, className) : createUnwrappedLine(children, lineNumber);\n  }\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        }; // if it's the first line\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          var _line = createLine(_children, lineNumber);\n\n          newTree.push(_line); // if it's the last line\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n          var lastLineInPreviousSpan = {\n            type: 'text',\n            value: \"\".concat(text)\n          };\n\n          if (stringChild) {\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            var _children2 = [lastLineInPreviousSpan];\n\n            var _line2 = createLine(_children2, lineNumber, node.properties.className);\n\n            newTree.push(_line2);\n          } // if it's neither the first nor the last line\n\n        } else {\n          var _children3 = [newChild];\n\n          var _line3 = createLine(_children3, lineNumber, node.properties.className);\n\n          newTree.push(_line3);\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n      var line = createLine(children, lineNumber);\n      newTree.push(line);\n    }\n  }\n\n  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);\n}\n\nfunction defaultRenderer(_ref5) {\n  var rows = _ref5.rows,\n      stylesheet = _ref5.stylesheet,\n      useInlineStyles = _ref5.useInlineStyles;\n  return rows.map(function (node, i) {\n    return (0, _createElement[\"default\"])({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n} // only highlight.js has the highlightAuto method\n\n\nfunction isHighlightJs(astGenerator) {\n  return astGenerator && typeof astGenerator.highlightAuto !== 'undefined';\n}\n\nfunction getCodeTree(_ref6) {\n  var astGenerator = _ref6.astGenerator,\n      language = _ref6.language,\n      code = _ref6.code,\n      defaultCodeValue = _ref6.defaultCodeValue;\n\n  // figure out whether we're using lowlight/highlight or refractor/prism\n  // then attempt highlighting accordingly\n  // lowlight/highlight?\n  if (isHighlightJs(astGenerator)) {\n    var hasLanguage = (0, _checkForListedLanguage[\"default\"])(astGenerator, language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  } // must be refractor/prism, then\n\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nfunction _default(defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref7) {\n    var language = _ref7.language,\n        children = _ref7.children,\n        _ref7$style = _ref7.style,\n        style = _ref7$style === void 0 ? defaultStyle : _ref7$style,\n        _ref7$customStyle = _ref7.customStyle,\n        customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle,\n        _ref7$codeTagProps = _ref7.codeTagProps,\n        codeTagProps = _ref7$codeTagProps === void 0 ? {\n      className: language ? \"language-\".concat(language) : undefined,\n      style: _objectSpread(_objectSpread({}, style['code[class*=\"language-\"]']), style[\"code[class*=\\\"language-\".concat(language, \"\\\"]\")])\n    } : _ref7$codeTagProps,\n        _ref7$useInlineStyles = _ref7.useInlineStyles,\n        useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles,\n        _ref7$showLineNumbers = _ref7.showLineNumbers,\n        showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers,\n        _ref7$showInlineLineN = _ref7.showInlineLineNumbers,\n        showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN,\n        _ref7$startingLineNum = _ref7.startingLineNumber,\n        startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum,\n        lineNumberContainerStyle = _ref7.lineNumberContainerStyle,\n        _ref7$lineNumberStyle = _ref7.lineNumberStyle,\n        lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle,\n        wrapLines = _ref7.wrapLines,\n        _ref7$wrapLongLines = _ref7.wrapLongLines,\n        wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines,\n        _ref7$lineProps = _ref7.lineProps,\n        lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps,\n        renderer = _ref7.renderer,\n        _ref7$PreTag = _ref7.PreTag,\n        PreTag = _ref7$PreTag === void 0 ? 'pre' : _ref7$PreTag,\n        _ref7$CodeTag = _ref7.CodeTag,\n        CodeTag = _ref7$CodeTag === void 0 ? 'code' : _ref7$CodeTag,\n        _ref7$code = _ref7.code,\n        code = _ref7$code === void 0 ? (Array.isArray(children) ? children[0] : children) || '' : _ref7$code,\n        astGenerator = _ref7.astGenerator,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_ref7, _excluded);\n    astGenerator = astGenerator || defaultAstGenerator;\n    var allLineNumbers = showLineNumbers ? /*#__PURE__*/_react[\"default\"].createElement(AllLineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var generatorClassName = isHighlightJs(astGenerator) ? 'hljs' : 'prismjs';\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: rest.className ? \"\".concat(generatorClassName, \" \").concat(rest.className) : generatorClassName,\n      style: Object.assign({}, customStyle)\n    });\n\n    if (wrapLongLines) {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre-wrap'\n      });\n    } else {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre'\n      });\n    }\n\n    if (!astGenerator) {\n      return /*#__PURE__*/_react[\"default\"].createElement(PreTag, preProps, allLineNumbers, /*#__PURE__*/_react[\"default\"].createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * Some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined.\n     */\n\n\n    if (wrapLines === undefined && renderer || wrapLongLines) wrapLines = true;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    } // determine largest line number so that we can force minWidth on all linenumber elements\n\n\n    var largestLineNumber = codeTree.value.length + startingLineNumber;\n    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);\n    return /*#__PURE__*/_react[\"default\"].createElement(PreTag, preProps, /*#__PURE__*/_react[\"default\"].createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({\n      rows: rows,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}